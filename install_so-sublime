# Copy Sublime Logstash input into place
cp ./logstash/0001_input_sublime.conf /opt/so/saltstack/local/salt/logstash/pipelines/config/so/

# Copy Sublime Logstash output into place
cp ./logstash/9888_output_sublime.conf.jinja /opt/so/saltstack/local/salt/logstash/pipelines/config/so/

# Modify Logstash init.sls to include port bindings
file="/opt/so/saltstack/local/pillar/logstash/init.sls"
backup_file="/root/logstash.init.sls.bak"
if [ -f "$file" ]; then
    # Backup file before replacing
    mv "$file" "$backup_file"
fi
cp ./logstash/init.sls "$file"

# Modify Logstash manager.sls to include the Sublime HTTP input
file="/opt/so/saltstack/local/pillar/logstash/manager.sls"
backup_file="/root/logstash.manager.sls.bak"
if [ -f "$file" ]; then
    # Backup file before replacing
    mv "$file" "$backup_file"
fi
cp ./logstash/manager.sls "$file"

# Modify Logstash search.sls to include the Sublime Elasticsearch output
file="/opt/so/saltstack/local/pillar/logstash/search.sls"
backup_file="/root/logstash.search.sls.bak"
if [ -f "$file" ]; then
    # Backup file before replacing
    mv "$file" "$backup_file"
fi
cp ./logstash/search.sls "$file"    

# Restart Logstash
so-logstash-restart

# Copy Elasticsearch ingest pipeline into place
cp ./elasticsearch/sublime /opt/so/saltstack/local/salt/elasticsearch/files/ingest/

# Restart Elasticsearch
so-elasticsearch-restart

# Request Sublime server IP
echo "Please enter an IP for the Sublime server"
read sublime_server

# Copy Sublime SOC action into place
file="/opt/so/saltstack/local/salt/soc/files/soc/menu.actions.json"
backup_file="/root/menu.actions.json.bak"
if [ -f "$file" ]; then
    # Backup file before replacing
    mv "$file" "$backup_file"
fi
cp ./soc/menu.actions.json "$file"

# Copy SOC artifact type presets into place
file="/opt/so/saltstack/local/salt/soc/files/soc/presets.artifacttype.json"
backup_file="/root/presets.artifacttype.json.bak"
if [ -f "$file" ]; then
    # Backup file before replacing
    mv "$file" "$backup_file"
fi
cp ./soc/presets.artifacttype.json "$file"

# Restart SOC
so-soc-restart

# Copy Sublime analyzer into place
cp -av ./sensoroni/files/analyzers/sublime /opt/so/saltstack/local/salt/sensoroni/files/analyzers/

# Modify firewall to create new host and port group, then apply configuration
for i in $(sudo ls /opt/so/saltstack/local/pillar/minions/ | grep -E 'eval|manager|standalone'); do
cat << EOF >> /opt/so/saltstack/local/pillar/minions/$i
firewall:
  assigned_hostgroups:
    chain:
      DOCKER-USER:
        hostgroups:
          sublime:
            portgroups:
              - portgroups.sublime
EOF
done

# Create firewall configuration for Sublime
so-firewall addhostgroup sublime
so-firewall addportgroup sublime
so-firewall addport sublime tcp 8228
so-firewall includehost sublime 127.0.0.1
so-firewall includehost sublime "$sublime_server"
salt-call state.apply firewall -l info

echo "Configuration complete!"
